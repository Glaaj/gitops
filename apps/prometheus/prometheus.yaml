apiVersion: v1
kind: Namespace
metadata:
  name: prometheus
---
apiVersion: source.toolkit.fluxcd.io/v1beta1
kind: HelmRepository
metadata:
  name: prometheus
  namespace: prometheus
spec:
  interval: 10m
  url: https://prometheus-community.github.io/helm-charts
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: prometheus
  namespace: prometheus
spec:
  interval: 5m
  chart:
    spec:
      chart: prometheus
      version: '25.8.2'
      sourceRef:
        kind: HelmRepository
        name: prometheus
        namespace: prometheus
      interval: 1m
  values:
    serverFiles:
      alerting_rules.yml:
        groups:
          - name: "blackbox http_2xx"
            rules:
            - alert: "blackbox http_2xx"
              expr: probe_http_status_code{job="blackbox http_2xx"} != 200
              for: 2m
              labels:
                severity: "critical"
                env: "production"
              annotations:
                description: '{{ $labels.instance }} of job {{ $labels.job }} has been down for more than 2 minutes.'
                summary: "{{ $labels.instance }} did not return status code 200"
                message: "HTTP status code {{ $value }}"
            - alert: BlackboxSlowProbe
              expr: avg_over_time(probe_http_duration_seconds{job="blackbox http_2xx"}[1m]) > 1
              for: 5m
              labels:
                severity: "warning"
                env: "production"
              annotations:
                summary: "Blackbox slow probe (target {{ $labels.target }})"
                message: "Blackbox probe took more than 1s to complete\n VALUE = {{ $value }}"
          - name: "ssl-certs"
            rules:
            - alert: BlackboxSslCertificateWillExpireSoon
              expr: probe_ssl_earliest_cert_expiry - time() < 86400 * 30
              for: 5m
              labels:
                severity: "warning"
              annotations:
                summary: "Blackbox SSL certificate will expire soon (instance {{ $labels.target }})"
                message: "SSL certificate expires in 30 days\n VALUE = {{ $value }}"
            - alert: BlackboxSslCertificateWillExpireSoon
              expr: probe_ssl_earliest_cert_expiry - time() < 86400 * 3
              for: 5m
              labels:
                severity: "error"
              annotations:
                summary: "Blackbox SSL certificate will expire soon (instance {{ $labels.target }})"
                message: "SSL certificate expires in 3 days\n VALUE = {{ $value }}"
    prometheus.yml:
      rule_files:
        - /etc/config/alerting_rules.yml
        - /etc/config/recording_rules.yml
    server:
      ingress:
        enabled: false
      global:
        scrape_interval: 30s
        scrape_timeout: 10s
        evaluation_interval: 1m
    extraScrapeConfigs: |
      - job_name: 'blackbox'
        metrics_path: /probe
        params:
          module: [http_2xx]
        static_configs:
          - targets:
            - https://www.discord.com
            - https://www.github.com
            - https://www.linkedin.com
        relabel_configs:
          - source_labels: [__address__]
            target_label: __param_target
          - source_labels: [__param_target]
            target_label: instance
          - target_label: __address__
            replacement: http://blackbox-prometheus-blackbox-exporter.blackbox.svc.cluster.local:9115

    alertmanager:
      enabled: true
      ingress:
        enabled: false
      config:
        global:
          resolve_timeout: 5m
        route:
          group_by: ['instance',]
          group_wait: 30s
          group_interval: 5m
          repeat_interval: 12h
          receiver: 'discord'
        receivers:
          - name: 'discord'
            discord_configs:
            - webhook_url: 'https://discord.com/api/webhooks/1171168808715681822/9M8HkSLZWiZI3LgK3PLDdx-HH3L7Eu1N-WWjH_rs2Dbxxmxd_PL71YJ_BAWF8m-D1vir'

    # disabling unused components
    kube-state-metrics:
      enabled: false
    prometheus-node-exporter:
      enabled: true
    prometheus-pushgateway:
      enabled: false
